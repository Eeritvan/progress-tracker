name: client pipeline

on:
  workflow_call:
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      CODECOV_TOKEN:
        required: true

jobs:
  lint:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: client
    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    - name: Install dependencies
      run: bun install --frozen-lockfile
    - name: Check style
      run: bun run lint

  test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: client
    steps:
    - uses: actions/checkout@v4
    - uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest
    - name: Install dependencies
      run: bun install --frozen-lockfile
    - name: Run tests
      run: bun run coverage
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        flags: client
        name: client-coverage
        fail_ci_if_error: true

  build:
    needs: [lint, test]
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: client
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: ./client
          push: false
          tags: |
            eeritvan/tracker-client:${{ github.sha }}
            eeritvan/tracker-client:latest
          cache-from: type=registry,ref=eeritvan/tracker-client:buildcache
          cache-to: type=registry,ref=eeritvan/tracker-client:buildcache,mode=max
          outputs: type=docker,dest=${{ runner.temp }}/client-image.tar
      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: client-image
          path: ${{ runner.temp }}/client-image.tar
