scalar Time

enum Color {
  darkseagreen,
  lightgreen,
  mediumaquamarine,
  greenyellow,
  aqua,
  paleturquoise,
  skyblue,
  teal,
  slateblue,
  plum,
  pink,
  hotpink,
  fuchsia,
  tomato,
  orangered
}

enum Icon {
  Book,
  Code,
  TentTree,
  School,
  AlarmClock,
  Brush,
  CalendarDays,
  Gamepad2,
  NotebookPen,
  Coffee,
  Wallet
}

type Card {
  id: ID!
  name: String!
  desc: String
  completedDays: [Time!]
  color: Color!
  icon: Icon!
}

type Query {
  getCards: [Card!]!
}

input NewCard {
  name: String!
  desc: String
  color: Color!
  icon: Icon!
}

type Mutation {
  createCard(input: NewCard!): Card!
  deleteCard(input: ID!): Boolean!
  completeDay(input: ID!): Boolean!
  reorderCards(input: [ID!]!): Boolean!
  resetAllCards: Boolean!
}
